import{_ as a,c as s,o as t,aA as e}from"./chunks/framework.CcwNf0ln.js";const k=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"BigRiverJunbi.jl","tagline":"Statistical Tools for Data Preprocessing (Imputation, Normalization, Transformation) and Exploratory Analysis for 'omics data in Julia","actions":[{"theme":"brand","text":"Get Started","link":"/get_started"},{"theme":"alt","text":"View on Github","link":"https://github.com/senresearch/BigRiverJunbi.jl"},{"theme":"alt","text":"API","link":"/api"}]}},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}`),n={name:"index.md"};function l(p,i,h,o,r,d){return t(),s("div",null,[...i[0]||(i[0]=[e(`<p style="margin-bottom:2cm;"></p><div class="vp-doc" style="width:80%;margin:auto;"><h1> What is BigRiverJunbi.jl? </h1><p>BigRiverJunbi.jl is a Julia package for &#39;omics data preprocessing. While it can be used as a standalone package, it was designed to be used in conjunction with the BigRiverMetabolomics.jl package.</p><h3> Why the name? </h3><p>&quot;Junbi&quot; (準備, 준비, 准备) is the word for &quot;preparation&quot; in Chinese, Korean, and Japanese (the pronunciation is slightly different in each of these).</p><h2> Installation </h2><p>You can install BigRiverJunbi using Julia&#39;s package manager <code>Pkg</code>:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BigRiverJunbi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Or you can use the package mode in the REPL:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] add BigRiverJunbi</span></span></code></pre></div></div>`,2)])])}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
